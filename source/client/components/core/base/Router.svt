<!--*
    Navigation router and root component for the docsite.

    This component gets mounted to an element in the HTML.
-->

{#key data}
  {@const { Component, route, ...props } = data}
  <Docsite page={error ? 'error' : route}>
    {#snippet children(site)}
      {#if error}
        <Error {...props} {error} />
      {:else}
        <svelte:boundary {onerror}>
          <Component {...props} {site} />
        </svelte:boundary>
      {/if}
    {/snippet}
  </Docsite>
{/key}
<div class="generated">
  <img src={tiny_logo} alt="Generated by ACID" />
</div>


<script module>
import { router, toUrl } from '#frend/routing'
import { context } from '#frend/lib';
import tiny_logo from '../../../../images/acid-gray-tiny'

import Docsite from './Docsite'
import Error from '../page/Error'

router.start();
let [ payload ] = router.last('change');
</script>

<script>
let data = $state(payload);
let error = $state();

let handler = payload => data = payload
let onerror = err => error = err

$effect(() => console.log('FIX ERROR PAGE !!\n', error))

$effect(() => 
{
    router.on('change', handler);
    return () => router.off('change', handler);
});

context.url = toUrl;
</script>

<style>
.generated
{
    display: block !important;
    opacity: 1 !important;
    visibility: visible !important;
    height: auto !important;
    width: auto !important;
    
    filter: opacity(0.25) !important;
    margin: 12px 32px !important;
    padding: 0 !important;
    pointer-events: none;

    position: fixed !important;
    top: auto !important;
    right: 0 !important;
    bottom: 0 !important;
    left: auto !important;
    z-index: 1 !important;
}
</style>
