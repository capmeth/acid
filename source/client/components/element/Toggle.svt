<!--*
    Wraps content for toggle-ability.

    @tags group:element, page, region

    @property { boolean } active
      Is content currently active?  This property is `$bindable`.
    @property { string } [store]
      If set, `active` state will be remembered in localStorage.
-->

<button 
  class="element-toggle page-{ctx.page} region-{ctx.region} role-{role}" 
  class:active 
  type="button" 
  onclick={click}
  onmouseenter={hov(true)}
  onmouseleave={hov(false)}
>
  {@render children(active)}
</button>


<script module>
import { is } from '#utils'
import { storage } from '#frend/lib'
</script>

<script>
let { active = $bindable(), hover = $bindable(), role, store, children } = $props();
// don't use stored value if parent initially sets active state
if (!is.bool(active) && store) active = storage[store];

let click = () => 
{
    active = !active;
    if (store) storage[store] = active;
}

let hov = bool => () => hover = bool
</script>
