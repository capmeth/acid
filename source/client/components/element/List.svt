<!--*
    Renders content as an unordered list.

    Nothing is rendered if `items` is nullish or of zero length.

    Each element of `items` is passed to `children`, optionally being first 
    processed by the predicate function (`pred`) and then wrapped in an 
    `<li>`.

    @tags group:element, page, region

    @property { snippet } children
      Passed each item in `items` to render.
    @property { function } [content]
      Receives the snippet that renders the list content.
    @property { array } [items]
      List of items to render.
    @property { boolean } [hide]
      Hide the list?
    @property { function } [pred]
      A function to "process" each item passed to `children`.
    @property { string } [what]
      An indication of *what* is being listed. Used as a classname.
-->

{#if items?.length}
  {#if content}
    {@render content(render)}
  {:else}
    {@render render()}
  {/if}
{/if}

{#snippet render()}
  <ul class="element-list page-{ctx.page} region-{ctx.region} {what}">
    {#each items as item (item)}
      {#if !is.undef(item)}
        <li class="listitem">
          {@render children(pred?.(item) || item)}
        </li>
      {/if}
    {/each}
  </ul>  
{/snippet}


<script module>
import { is } from '#utils'
</script>

<script>
let { content, items, pred, what = '', children } = $props();
</script>
