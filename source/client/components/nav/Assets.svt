<!--*
    Generates asset tree for a section, its parent, and its sub-sections.

    @tags group:nav, no-style

    @property { string } [sect]
      Name of the section to be rendered.
-->

{#if hasAssets(section)}
  <Card name={group} store="nav-{group}">
    {#snippet header()}
      <Title>
        <span>{ t(`label-${group}`) }</span>
      </Title>
    {/snippet}
    {@render listAssets(section[group])}
    {@render listSections(section.sections)}
  </Card>
{/if}

{#snippet listSections(items)}
  <List {items} {pred} what="sections">
    {#snippet children(sect)}
      <Link to="section" {sect}>{ sect.title }</Link>
      {@render listAssets(sect[group])}
      {@render listSections(sect.sections)}
    {/snippet}
  </List>  
{/snippet}

{#snippet listAssets(items)}
  <List {items} pred={sinfo.asset} what="{group}-list">
    {#snippet children(asset)}
      <Link uid={asset.uid}>{ asset.title }</Link>
    {/snippet}
  </List>
{/snippet}


<script module>
import { sinfo, t } from '#frend/lib'

import Card from '../element/Card'
import Link from '../app/Link'
import List from '../element/List'
import Title from '../element/Title'
</script>

<script>
let { group, sect = sinfo.root.name } = $props();
let section = sinfo(sect);

let hasAssets = section => !!section[group]?.length || !!section.descendants[group]?.length

let pred = sect =>
{
    let section = sinfo(sect);
    if (hasAssets(section)) return section;
}
</script>
