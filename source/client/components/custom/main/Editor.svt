<!--*
    Renders UI for a Code Block Editor (CoBE) component.

    The class "hljs" is added to the parent element of **Code** to ensure
    the proper background theme is applied.
    
    @tags cobe, inject:#main-editor

    @property { boolean } copied
      Has code been copied to clipboard?
    @property { boolean } edited
      Is current code different from current render?
    @property { object } [error]
      Error thrown by current render.
    @property { string } id
      An id for the editor.
    @property { string } [label]
      A label for the editor.
    @property { string } [lang]
      Language type of the code block.
    @property { string } mode
      Rendering mode for the editor.
    @property { boolean } shifted
      Is current code different from original code?
    @property { boolean } showing
      Is code entry currently being shown?
-->

<div 
  {id}
  class="main-editor mode-{mode} lang-{lang}"
  class:labeled={label}
  class:shifted
  class:edited
  class:copied
  class:isolated
  class:showing
  class:failed={error}
>
  {#if label}
    <div class="label">{ label }</div>
  {/if}
  <Renbox>
    {#snippet use(render)}
      <div class="stage">
        {@render render()}
        {#if error}
          <div class="error">{ error }</div>
        {/if}
      </div>
    {/snippet}
  </Renbox>
  {#if mode !== 'render'}
    <div class="controls">
      <Action name="copy">
        {#snippet children({ action, disabled, on, state = on ? 'copied' : 'copy' })}
          <Button action="editor_{state}" {disabled} onclick={action}>
            {@html t(`action_editor_${state}`)}
          </Button>
        {/snippet}
      </Action>
      <Action name="toggle">
        {#snippet children({ action, disabled, on, state = on ? 'hide' : 'show' })}
          <Button action="editor_{state}" {disabled} onclick={action}>
            {@html t(`action_editor_${state}`)}
          </Button>
        {/snippet}
      </Action>
      <Action name="update">
        {#snippet children({ action, disabled })}
          <Button action="editor_update" {disabled} onclick={action}>
            {@html t.action_editor_update}
          </Button>
        {/snippet}
      </Action>
      <Action name="reset">
        {#snippet children({ action, disabled })}
          <Button action="editor_reset" {disabled} onclick={action}>
            {@html t.action_editor_reset}
          </Button>
        {/snippet}
      </Action>
      <Picker />
      <Action name="isolate">
        {#snippet children({ action, disabled, on, state = on ? 'close' : 'open' })}
          <Button action="editor_{state}" {disabled} onclick={action}>
            {@html t(`action_editor_${state}`)}
          </Button>
        {/snippet}
      </Action>
    </div>
  {/if}
  <Code>
    {#snippet use(render)}
      <div class="entry hljs">
        {@render render()}
      </div>
    {/snippet}
  </Code>
</div>


<script module>
import Button from '#stable/helper/Button'
import Action from '#stable/cobe/Action'
import Code from '#stable/cobe/Code'
import Picker from '#stable/cobe/Picker'
import Renbox from '#stable/cobe/Renbox'
</script>

<script>
let 
{ 
    copied, edited, error, id, isolated, 
    label, lang, mode, shifted, showing,
} 
= $props();
</script>

<style>
/* @inject #main-editor */
</style>
