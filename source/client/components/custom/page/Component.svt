<!--*
	  Renders UI for a component page.

    @tags inject:#page-component

    @property { string } uid
      Id of component asset to display.
-->

<div class="page-component">
  <header>
    {#if site.logo}
      <div class="logo">
        <Link to="home">
          <img class="logo" src={site.logo} alt="docsite logo" />
        </Link>
      </div>
    {/if}
    {#if site.title}
      <div class="title">
        <Link to="home">{ site.title }</Link>
      </div>
    {/if}
    {#if site.version}
      <div class="version">{ site.version }</div>
    {/if} 
  </header>
  <main>
    <div class="leader">
      <div class="title" class:deprecated>{ title }</div>
      {#if deprecated}
        <div class="deprecation">{ deprecated }</div>
      {/if}
      <Active kind="sector" store="asset-description">
        {#snippet header()}
          <span class="sector-title">{ t.label_description }</span>
        {/snippet}
        <Markup type="component">
          {#if description}
            {@html description}
          {:else}
            <p class="empty">
              { t(`msg_no_component_description`) }
            </p>    
          {/if}            
        </Markup>
      </Active>
      <List items={tags} pred={tinfo} type="tags">
        {#snippet use(render)}
          <Active kind="sector" store="asset-tags">
            {#snippet header()}
              <span class="sector-title">{ t.label_tags }</span>
            {/snippet}
            {@render render()}
          </Active>
        {/snippet}
        {#snippet children(data)}
          <Tag {...data} />
        {/snippet}        
      </List>
      <List items={propers} type="dual">
        {#snippet use(render)}
          <Active kind="sector" store="asset-props">
            {#snippet header()}
              <span class="sector-title">{ t.label_props }</span>
            {/snippet}
            {@render render()}
          </Active>
        {/snippet}
        {#snippet children({ name, deprecated, description, fallback, required, type, values })}
          <div class="prop" class:required>
            <div class="name" class:deprecated>{ name }</div>
            <div class="type">{ type }</div>
            {#if deprecated}
              <div class="deprecation">{ deprecated }</div>
            {/if}
            <div class="desc">
              <Markup type="prop">
                {#if description}
                  {@html description}
                {:else}
                  <p class="empty">
                    { t(`msg_no_prop_description`) }
                  </p>    
                {/if}            
              </Markup>
            </div>
            {#if values}
              <div class="values">
                <List items={values} delim>
                  {#snippet children(value)}
                    <code>{ value }</code>
                  {/snippet}
                </List>
              </div>
            {/if}
            {#if fallback}
              <div class="default">
                <code>{ fallback }</code>
              </div>
            {/if}
          </div>
        {/snippet}
      </List>
    </div>
    <div class="content">
      <Article {mcid} />
    </div>
  </main>
  <nav>
    <Tree>
      {#snippet use(render)}
        <Active kind="nav" store="tree">
          {#snippet header()}
            <span class="nav-title">{ t.label_content }</span>
          {/snippet}
          {@render render()}
        </Active>
      {/snippet}
    </Tree>
    <Active kind="nav" store="links">
      {#snippet header()}
        <span class="nav-title">{ t.label_static }</span>
      {/snippet}
      <Static />
    </Active>
  </nav>
</div>


<script module>
import { ainfo, page, site, tinfo } from '#public'

import Active from '#stable/helper/Active'
import Article from '#stable/common/Article'
import Link from '#stable/helper/Link'
import List from '#stable/common/List'
import Markup from '#custom/main/Markup'
import Static from '#stable/common/Static'
import Tag from '#custom/main/Tag'
import Tree from '#stable/common/Tree'
</script>

<script>
let { uid } = $props();
let { deprecated, description, mcid, props: propers, tags, title } = ainfo(uid);

page.setTitle(title);
</script>

<style>
/* @inject #page-component */
</style>
