<!--*

    @tags group:cobe, no-style
-->

<div class="cobe-input" class:disabled data-lang={lang}>
  <pre><code class="{lang} language-{lang}">{@html highlight(code)}</code></pre>
  {#if editable}
    <textarea bind:value={code} {onkeydown} {disabled}></textarea>           
  {/if}
  {#if children}
    <div class="overlay">{@render children?.()}</div>  
  {/if}
</div>


<script module>
// extra space at end makes sure <pre> captures final newline
let escape = source => source.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;") + ' '

let highlighter = (language, suppress) => 
{
    if (suppress || !window.hljs || !language || language === 'default') return escape;

    if (!hljs.getLanguage(language))
    {
        console.warn(`Syntax highlighting for ${language} is not available.`);
        return escape;
    }
    // extra space at end makes sure <pre> captures final newline
    return source => hljs.highlight(source, { language, ignoreIllegals: true }).value + ' '
}
</script>

<script>
let { code = $bindable(), disabled, editable, lang, noHighlight, onkeydown, children } = $props();
let highlight = $state(highlighter(lang, noHighlight));
</script>


<style>
.cobe-input
{
    border-radius: inherit !important;
    display: flex !important;
    position: relative !important;
    margin: 0 !important;
    overflow: hidden !important;
    padding: 0 !important;

    &::after 
    {
        content: attr(data-lang);
        display: block;
        font-size: 24px;
        color: #666666;
        position: absolute;
        top: 0;
        right: 0;
        padding: 8px;
        text-shadow: 1px 1px 1px black;
        filter: opacity(0.1);
    }

    &.disabled
    {
        .overlay
        {
            display: block;
        }

        pre
        {
            filter: blur(2px);
        }
    }

    pre
    {
        background: none !important;
        border-radius: inherit !important;
        position: relative !important;        
        margin: 0 !important;
        min-width: 100% !important;
        padding: 0 !important;
        z-index: 1 !important;

        code
        {
            background: none !important;
            color: inherit !important;
        }
    }

    textarea 
    {
        caret-color: black;
        color: transparent;
        resize: none !important;
        position: absolute !important;
        left: 0 !important;
        top: 0 !important;
        height: 100%;
        width: 100%;
        overflow: hidden !important;
        z-index: 2 !important;

        &:focus-visible
        {
            outline: none !important;
        }
    }

    pre code, textarea
    {
        background: transparent !important;
        border-radius: inherit !important;
        box-sizing: border-box !important;
        display: block !important;
        font-family: var(--acid-font-family-cobe, Monaco, monospace) !important;
        font-size: var(--acid-font-size-cobe, 1em) !important;
        letter-spacing: var(--acid-letter-spacing-cobe, 0) !important;
        line-height: var(--acid-line-height-cobe, 1.5em) !important; 
        margin: 0 !important;
        overflow: hidden !important;
        padding: var(--acid-padding-cobe, 18px 26px) !important;
        white-space: pre-wrap !important;
    }

    .overlay
    {
        display: none;
        position: absolute !important;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        margin: 0;
        padding: 0;
        z-index: 1;
    }
}
</style>
