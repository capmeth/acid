<!--*
    A CSS-protected rendering container.

    The root element has a `.renbox` class applied which is used internally to
    block docsite-related CSS to create a clean rendering space.

    Works as a descendant of the **Editor** component, which provides
    the `editor` context object necessary for operation.

    Expected `editor` context interface:
 *  - `renbox` *object*:
 *    - `render` *boolean*: should this component render?
 *    - `allowCss` *boolean*: should the `.renbox` CSS class be removed?
 *  - `display` *HTMLElenent*: bound to the rendering mount point

    @tags cobe
    
    @property { snippet } [use]
      Receives a snippet that renders the content of this component.
-->

<When test={render} {use}>
  <div class="cobe-renbox" style="background-color:{color}">
    <div class:renbox={!allowCss}>
      <div bind:this={editor.display}></div>
    </div>
  </div>
</When>


<script module>
import { context } from '#frend/lib'

import When from '../common/When'
</script>

<script>
let { use } = $props();
let { editor } = context;
let { allowCss, render } = $derived(editor.renbox);
let { color } = $derived(editor);
</script>

<style>
.cobe-renbox
{
    padding: var(--acid-padding-renbox, 16px);

    .renbox
    {
        all: initial !important;
    }
}
</style>
