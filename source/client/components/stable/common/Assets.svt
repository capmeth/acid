<!--*
    Processes and filters docsite assets.

    Unused props are assumed to be filter values.

    > TODO: Link to filtering props!

    @property { snippet } children
      Receives each included (unfiltered) asset object.
    @property { boolean } [sort]
      Sort assets alphabetically by title?
    @property { string } [type]
      Styling hint for the list.
    @property { snippet } [use]
      Receives a snippet that renders the content of this component.
      Also receives the full list of `assets` as a second parameter.
-->

<When test={true} {use} param={{ assets }}>
  <List items={assets} pred={ainfo} {type} {children} />
</When>


<script module>
import { ainfo } from '#frend/lib'
import stateFilters from '#frend/state/filters.svelte'

import List from './List'
import When from './When'
</script>

<script>
let { sort, type, use, children, ...filters } = $props();

let others = filters.store ? stateFilters(filters.store) : {};

let assets = $derived.by(() => 
{
    let items = ainfo.assets.filter(ainfo.filter({ ...others, ...filters }));
    return sort ? items.sort(ainfo.sort.title.asc) : items;
});
</script>
